{"version":3,"sources":["components/Posts/Post/styles.js","api/index.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Forms/styles.js","components/Forms/Form.js","styles.js","App.js","reducers/posts.js","reducers/index.js","index.js"],"names":["makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","url","deletePost","id","axios","delete","likePost","patch","Post","post","setCurrentId","dispatch","useDispatch","classes","useStyles","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","fontSize","tags","map","tag","gutterBottom","CardContent","component","message","CardActions","a","api","data","type","payload","console","log","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","length","Grid","container","xs","sm","item","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","find","p","useState","postData","setPostData","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","updatePost","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxwidth","AppBar","align","src","alt","Grow","in","justify","reducer","action","filter","combineReducers","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f55a0f5c.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n    media: {\n        height: 0,\n        paddingTop: '56.25%',\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        backgroundBlendMode: 'darken',\n    },\n    border: {\n        border: 'solid',\n    },\n    fullHeightCard: {\n        height: '100%',\n    },\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        borderRadius: '15px',\n        height: '100%',\n        position: 'relative',\n    },\n    overlay: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        color: 'white',\n    },\n    overlay2: {\n        position: 'absolute',\n        top: '20px',\n        right: '20px',\n        color: 'white',\n    },\n    grid: {\n        display: 'flex',\n    },\n    details: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        margin: '20px',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    cardActions: {\n        padding: '0 16px 8px 16px',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n});","import axios from 'axios';\n\nconst url = \"https://mem-collection.herokuapp.com/posts\";\nexport const fretchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);\n","import React from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport useStyles from './styles'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment'\nimport { useDispatch } from 'react-redux';\nimport { deletePost, likePost } from '../../../actions/posts'\n\n\nconst Post = ({ post, setCurrentId }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    return (\n        <Card className={classes.card}>\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\n            <div className={classes.overlay}>\n                <Typography variant=\"h6\">{post.creator}</Typography>\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            <div className={classes.overlay2}>\n                <Button style={{ color: \"white\" }} size=\"small\" onClick={() => setCurrentId(post._id)}>\n                    <MoreHorizIcon fontSize=\"default\" />\n                </Button>\n            </div>\n            <div className={classes.details}>\n                <Typography variant=\"body2\" color=\"textSecondary\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n            </div>\n\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\n\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button size=\"small\" color=\"primary\" onClick={() => { dispatch(likePost(post._id)) }}>\n                    <ThumbUpAltIcon fontSize=\"small\" />\n                    Like\n                    {` ${post.likeCount}`}\n                </Button>\n                <Button size=\"small\" color=\"primary\" onClick={() => { dispatch(deletePost(post._id)) }}>\n                    <DeleteIcon fontSize=\"small\" />\n                    Delete\n                </Button>\n            </CardActions>\n        </Card >\n    )\n}\nexport default Post;","import axios from 'axios';\nimport * as api from '../api'\nconst url = \"https://mem-collection.herokuapp.com/posts\";\nexport const getPosts = () => async (dispatch) => {\n\n    try {\n        const { data } = await api.fretchPosts();\n        dispatch({ type: \"FETCH_ALL\", payload: data });\n    }\n    catch (error) {\n        console.log(\"error\", error.message);\n    }\n\n}\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(post);\n        console.log(data);\n        dispatch({ type: \"CREATE\", payload: data });\n    }\n    catch (error) {\n        console.log(\"error\", error.message);\n    }\n\n}\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        console.log(post);\n        const { data } = await axios.patch(`${url}/${id}`, post);\n\n        dispatch({ type: \"UPDATE\", payload: data });\n    } catch (error) {\n        console.log(\"error:\", error.message);\n    }\n\n}\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({ type: \"DELETE\", payload: id });\n    } catch (error) {\n        console.log(\"error:\", error.message);\n    }\n\n}\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n        dispatch({ type: \"LIKE\", payload: data })\n    } catch (error) {\n        console.log(error);\n    }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    mainContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    smMargin: {\n        margin: theme.spacing(1),\n    },\n    actionDiv: {\n        textAlign: 'center',\n    },\n}));","import React from 'react';\nimport Post from './Post/Post'\nimport useStyles from './styles'\nimport { useSelector } from 'react-redux';\nimport { Grid, CircularProgress } from '@material-ui/core';\nconst Posts = ({ setCurrentId }) => {\n    const classes = useStyles();\n    const posts = useSelector(state => state.posts);\n    return (\n        !posts.length ? <CircularProgress /> : (\n\n            < Grid className={classes.container} container alignItems=\"stretch\" spacing={3} >\n                {\n                    posts.map(post => (\n                        <Grid key={post._id} xs={12} sm={6} item>\n                            <Post post={post} setCurrentId={setCurrentId} />\n                        </Grid>\n                    )\n                    )\n                }\n            </Grid >\n        )\n    )\n}\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n        },\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n    form: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n    },\n    fileInput: {\n        width: '97%',\n        margin: '10px 0',\n    },\n    buttonSubmit: {\n        marginBottom: 10,\n    },\n}));","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport useStyles from './styles'\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from 'react-redux'\nimport { createPost, updatePost } from '../../actions/posts'\nimport { useSelector } from 'react-redux';\n\n\n\n\n\nconst Form = ({ currentId, setCurrentId }) => {\n    const post = useSelector(state => currentId ? state.posts.find((p) => p._id === currentId) : null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [postData, setPostData] = useState({\n        creator: '',\n        title: '',\n        message: '',\n        tags: '',\n        selectedFile: ''\n    });\n    useEffect(() => {\n        if (post)\n            setPostData(post);\n    }, [post])\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (currentId) {\n            dispatch(updatePost(currentId, postData));\n        }\n        else {\n\n            dispatch(createPost(postData));\n        }\n        clear();\n    }\n    const clear = () => {\n        setCurrentId(null);\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\n    }\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? \"Editing\" : \"Creating\"} a Memory</Typography>\n                <TextField name=\"creator\"\n                    variant=\"outlined\"\n                    label=\"Creator\"\n                    fullWidth\n                    value={postData.creator}\n                    onChange={(e) => setPostData({ ...postData, creator: e.target.value })}\n                />\n                <TextField name=\"title\"\n                    variant=\"outlined\"\n                    label=\"Title\"\n                    fullWidth\n                    value={postData.title}\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n                />\n                <TextField name=\"message\"\n                    variant=\"outlined\"\n                    label=\"Message\"\n                    fullWidth\n                    value={postData.message}\n                    onChange={(e) => setPostData({ ...postData, message: e.target.value })}\n                />\n                <TextField name=\"tags\"\n                    variant=\"outlined\"\n                    label=\"Tags\"\n                    fullWidth\n                    value={postData.tags}\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\n                />\n                <div className={classes.fileInput}>\n                    <FileBase\n                        type=\"file\"\n                        multiple={false}\n                        onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\n                    />\n                </div>\n\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    )\n}\nexport default Form;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    heading: {\n        color: 'rgba(0,183,255, 1)',\n    },\n    image: {\n        marginLeft: '15px',\n    },\n    [theme.breakpoints.down('sm')]: {\n        mainContainer: {\n            flexDirection: \"column-reverse\"\n        }\n    }\n}));","import React from 'react'\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport Posts from './components/Posts/Posts';\nimport Form from './components/Forms/Form';\nimport { useDispatch } from 'react-redux';\nimport { getPosts } from './actions/posts'\nimport useStyles from './styles'\n\n\n\nfunction App() {\n  const [currentId, setCurrentId] = useState(null);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [dispatch, currentId])\n\n\n  const classes = useStyles();\n  return (\n    <Container maxwidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\n        <img className={classes.image} src=\"https://raw.githubusercontent.com/adrianhajdin/project_mern_memories/master/client/src/images/memories.png?token=AF56X74XONEUGZ4FD2FUIA27UURPI\" alt=\"memories\" height=\"60\" />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid className={classes.mainContainer} container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n\n  );\n}\n\nexport default App;\n","const reducer = (posts = [], action) => {\n    switch (action.type) {\n        case \"UPDATE\":\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post)\n        case \"FETCH_ALL\":\n            return action.payload;\n        case \"LIKE\":\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n        case \"DELETE\":\n            return posts.filter((post) => post._id !== action.payload);\n        case \"CREATE\":\n            return [...posts, action.payload];\n        default:\n            return posts;\n    }\n}\nexport default reducer;","import { combineReducers } from \"redux\";\nimport posts from './posts'\nexport default combineReducers({\n    posts,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport App from './App';\nimport './index.css';\nimport reducers from './reducers';\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}